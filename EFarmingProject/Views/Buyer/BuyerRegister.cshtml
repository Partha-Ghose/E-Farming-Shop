@model EFarmingProject.Models.Tbl_BuyerProfile

@{
    ViewBag.Title = "Registration";
}
<br /><br />
      <div class="row">
          <div class="col-md-12">
              <div class="col-md-2"></div>
              <div class="col-md-8">
                  <h2 style="text-align:center;padding:20px 20px;color: #ddd; background-color:#ff0000; border-radius:50px;">User Registration</h2>
              </div>
              <div class="col-md-2"></div>
          </div>
      </div>@if (ViewBag.Status != null && Convert.ToBoolean(ViewBag.Status))
{
    if (ViewBag.Message != null)
    {
        <div class="alert alert-success">
            <strong>Success!</strong>@ViewBag.Message
        </div>
    }
}
else
{
    using (Html.BeginForm("BuyerRegister", "Buyer", FormMethod.Post,  new { enctype = "multipart/form-data", id = "addUser", returnUrl = Request.QueryString["ReturnUrl"] }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <div class="col-md-2"></div>
            @Html.LabelFor(model => model.BFirstName, htmlAttributes: new { @class = "control-label User col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.BFirstName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter your Last Name" } })
                @Html.ValidationMessageFor(model => model.BFirstName, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-3"></div>
        </div>
        <div class="form-group">
            <div class="col-md-2"></div>
            @Html.LabelFor(model => model.BLastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.BLastName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter your Last Name" } })
                @Html.ValidationMessageFor(model => model.BLastName, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-3"></div>
        </div>

            @*<div class="form-group">
                    @Html.LabelFor(model => model.BFirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-2"></div>
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.BEmailId, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter your Email" } })
                        @Html.ValidationMessageFor(model => model.BEmailId, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.BDateOfBirth, new { htmlAttributes = new { @class = "form-control", @id = "OrderDate", @placeholder = "Enter your Date-of-Birth" } })
                        @Html.ValidationMessageFor(model => model.BDateOfBirth, "", new { @class = "text-danger" })
                        <input asp-for="OrderDate" readonly="readonly" class="form-control" type="text" />
                            <span asp-validation-for="OrderDate" class="text-danger"></span>
                    </div>
                </div>*@
        <div class="form-group">
            <div class="col-md-2"></div>
            @Html.LabelFor(model => model.BEmailId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.BEmailId, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter your Email" } })
                @Html.ValidationMessageFor(model => model.BEmailId, "", new { @class = "text-danger" })
                @Html.ValidationMessage("EmailExist", new { @class = "text-danger" })
            </div>
            <div class="col-md-3"></div>
        </div>
        <div class="form-group">
            <div class="col-md-2"></div>
            @Html.LabelFor(model => model.BDateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.BDateOfBirth, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter your Date-of-Birth" } })
                @Html.ValidationMessageFor(model => model.BDateOfBirth, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-3"></div>
        </div>
        <div class="form-group">
            <div class="col-md-2"></div>
            @Html.LabelFor(model => model.BPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.BPassword, new { htmlAttributes = new { @class = "form-control pwd", @placeholder = "Enter your Password" } })
                @Html.ValidationMessageFor(model => model.BPassword, "", new { @class = "error" })
            </div>
            <div class="col-md-3"></div>
        </div>
        <div class="form-group">
            <div class="col-md-2"></div>
            @Html.LabelFor(model => model.BConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.BConfirmPassword, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter your Conform Password" } })
                @Html.ValidationMessageFor(model => model.BConfirmPassword, "", new { @class = "error" })
            </div>
            <div class="col-md-3"></div>
        </div>
        <div class="form-group">
            <div class="col-md-2"></div>
            @Html.LabelFor(model => model.Village, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.Village, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter your Village" } })
                @Html.ValidationMessageFor(model => model.Village, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-3"></div>
        </div>
        <div class="form-group">
            <div class="col-md-2"></div>
            @Html.LabelFor(model => model.Postcode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.Postcode, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter your Post-Code" } })
                @Html.ValidationMessageFor(model => model.Postcode, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-3"></div>
        </div>
        <div class="form-group">
            <div class="col-md-2"></div>
            @Html.LabelFor(model => model.Thana, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.Thana, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter your Thana" } })
                @Html.ValidationMessageFor(model => model.Thana, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-3"></div>
        </div>
            @*<div class="form-group">
                    @Html.LabelFor(model => model.DistrictId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-5">

                        @Html.DropDownListFor(model => model.DistrictId, ViewBag.Dislist as SelectList, "---Select---", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.DistrictId, "", new { @class = "text-danger" })
                    </div>
                </div>*@
        <div class="form-group">
            <div class="col-md-2"></div>
            @Html.LabelFor(model => model.MobileNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.MobileNo, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter your Mobile No." } })
                @Html.ValidationMessageFor(model => model.MobileNo, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-3"></div>
        </div>
        <div class="form-group">
            <div class="col-md-2"></div>
            @Html.LabelFor(model => model.AnotherMobileNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.AnotherMobileNo, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter your Another Mobile No" } })
                @Html.ValidationMessageFor(model => model.AnotherMobileNo, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-3"></div>
        </div>

        <div class="form-group">
            <div class="col-md-2"></div>
            @Html.LabelFor(model => model.Division, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.Division, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter your Division" } })
                @Html.ValidationMessageFor(model => model.Division, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-3"></div>
        </div>

        <div class="form-group">
            <div class="col-md-2"></div>
            @Html.LabelFor(model => model.BNidNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.BNidNo, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter your NID-No." } })
                @Html.ValidationMessageFor(model => model.BNidNo, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-3"></div>
        </div>

            @*<div class="form-group">
                @Html.LabelFor(model => model.NidTypeId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.DropDownListFor(model => model.NidTypeId, ViewBag.Nidlist as SelectList, "---Select---", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.NidTypeId, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            <div class="col-md-2"></div>
            @Html.LabelFor(model => model.BDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @*@Html.TextAreaFor(model => model.BDescription, new { htmlAttributes = new { @class = "form-control" } })
            <textarea htmlattributes="{ class = form-control }" id="BDescription" name="BDescription" rows="5"></textarea>*@
                <textarea class="form-control" rows="5" id="BDescription" , placeholder="Description Here....." name="BDescription"></textarea>
                @Html.ValidationMessageFor(model => model.BDescription, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-3"></div>
        </div>

        <div class="form-group">
            <div class="col-md-2"></div>
            @Html.LabelFor(model => model.BImage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5" style="margin-top:5px;">
                <input type="file" name="ImageFile" />
            </div>
            <div class="col-md-3"></div>
        </div>

        <div class="form-group">
            <div class="col-md-2">
            </div>
            @Html.LabelFor(model => model.IsBuyer, htmlAttributes: new { @class = "control-label col-md-2"})
            <div class="col-md-5" style="margin-top:5px;">
                @*<input type="checkbox" name="buyer" />*@
                @Html.EditorFor(model => model.IsBuyer)
            </div>
            <div class="col-md-3"></div>
        </div>
        <div class="form-group">
            <div class="col-md-2"></div>
            @Html.LabelFor(model => model.IsSeller, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5" style="margin-top:5px;">
                @*<input type="checkbox" name="IsSeller" />*@
                @Html.EditorFor(model => model.IsSeller)
            </div>
            <div class="col-md-3"></div>
        </div>

        <div class="form-group">
            <div class="col-md-2"></div>
            <div class="col-md-offset-2 col-md-5">
                <input type="submit" value="Register" class="btn btn-primary btn-block" />
            </div>
            <div class="col-md-2"></div>
        </div>
        </div>
        if (ViewBag.Message != null)
        {
            <div class="alert alert-danger">
                <strong>Error!</strong>@ViewBag.Message
            </div>
        }
    }
}

<div>
    @Html.ActionLink("Login Now", "BuyerLogin", "Buyer")
</div>

@*@section Scripts{
        <script src="~/Scripts/jquery.validate.min.js"></script>
        <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    }*@

@section Scripts{
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    { await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        $(document).ready(function () {
            $("#OrderDate").datepicker({
                showAnim: "slide",
                changeMonth: true,
                changeYear: true
            });
        });
    </script>
    <script type="text/javascript">
        $(document).ready(function () {
            $('#addUser').bootstrapValidator({
                fields: {
                    BFirstName: {
                        selector: '.User',
                        message: 'name not valid',
                        validators: {
                            notEmpty: {
                                message: 'Name can not empty'
                            },
                            stringLength: {
                                min: 6,
                                max: 12,
                                message: 'Name will be 6 to 12 digite'
                            }
                        }
                    },
                    BPassword: {
                        selector: '.pwd',
                        message: 'Password not valid',
                        validators: {
                            notEmpty: {
                                message: 'Password can not empty'
                            },
                            stringLength: {
                                min: 6,
                                max: 12,
                                message: 'Password will be 6 to 12 digite'
                            }
                        }
                    }
                }
            })
        })
    </script>
}

